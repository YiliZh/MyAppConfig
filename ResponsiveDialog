import { Dialog, DialogType, DialogFooter, PrimaryButton, DefaultButton,
         IDialogContentStyles, IModalStyles } from '@fluentui/react';

const DIALOG_DESIGN_WIDTH = 1690;

const modalStyles: Partial<IModalStyles> = {
  // Only override what you need
  main: {
    width: `min(90vw, ${DIALOG_DESIGN_WIDTH}px)`,
    maxWidth: `min(90vw, ${DIALOG_DESIGN_WIDTH}px)`,
  },
  // Keep the whole dialog from exceeding viewport height
  scrollableContent: { maxHeight: '90vh' },
  // (Optional) vertically center if your layout needs it
  // root: { alignItems: 'center' },
};

const dialogContentStyles: Partial<IDialogContentStyles> = {
  content: {
    maxHeight: '90vh',
    overflowY: 'auto',
    overflowX: 'auto',
    padding: 0,
  },
  inner: { padding: 16 },
};

export const ResponsiveDialog = () => {
  const [open, setOpen] = React.useState(false);
  return (
    <>
      <PrimaryButton text="Open dialog" onClick={() => setOpen(true)} />
      <Dialog
        hidden={!open}
        onDismiss={() => setOpen(false)}
        dialogContentProps={{
          type: DialogType.largeHeader,
          title: 'Responsive Dialog',
          styles: dialogContentStyles,
        }}
        modalProps={{
          isBlocking: true,
          styles: modalStyles, // <- now Partial<IModalStyles>
        }}
      >
        <div style={{ width: DIALOG_DESIGN_WIDTH }}>
          {/* your 1690px-wide content */}
        </div>
        <DialogFooter>
          <DefaultButton onClick={() => setOpen(false)} text="Close" />
          <PrimaryButton onClick={() => alert('Save')} text="Save" />
        </DialogFooter>
      </Dialog>
    </>
  );
};
